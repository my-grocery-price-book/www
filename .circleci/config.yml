version: 2

jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.4-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres@localhost/app
          CI: true
      - image: circleci/postgres:9.4-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: test_db
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-gemfile-cache-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: rails-gemfile-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-yarn-cache-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-yarn-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: sudo apt install postgresql-client

      - run:
          name: Database setup
          command: bin/rails db:create db:structure:load db:migrate --trace

      - run:
          name: Run javascript tests
          command: yarn run jest

      - run:
          name: compile test assets
          command: bundle exec rake assets:precompile

      - run:
          name: Run ruby tests
          command: bundle exec rake test

      - run:
          name: Run cypress tests
          command: ./run_cypress.sh

      - store_artifacts:
          path: test/cypress/videos

      - store_artifacts:
          path: test/cypress/screenshots

  next:
    parallelism: 1
    docker:
    - image: circleci/ruby:2.4-node-browsers
      environment:
        BUNDLE_GEMFILE: Gemfile-next
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: circleci-demo-ruby
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres@localhost/app
        CI: true
    - image: circleci/postgres:9.4-alpine
      environment:
        POSTGRES_USER: circleci-demo-ruby
        POSTGRES_DB: test_db
        POSTGRES_PASSWORD: ""
    steps:
    - checkout

    # Restore bundle cache
    - restore_cache:
        keys:
        - rails-gemfile-next-cache-{{ checksum "Gemfile-next.lock" }}

    - run:
        name: Bundle Install
        command: bundle install --path vendor/bundle

    # Store bundle cache
    - save_cache:
        key: rails-gemfile-next-cache-{{ checksum "Gemfile-next.lock" }}
        paths:
        - vendor/bundle

    # Only necessary if app uses webpacker or yarn in some other way
    - restore_cache:
        keys:
        - rails-yarn-cache-{{ checksum "yarn.lock" }}

    - run:
        name: Yarn Install
        command: yarn install --cache-folder ~/.cache/yarn

    # Store yarn / webpacker cache
    - save_cache:
        key: rails-yarn-cache-{{ checksum "yarn.lock" }}
        paths:
        - ~/.cache/yarn

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m

    - run: sudo apt install postgresql-client

    - run:
        name: Database setup
        command: bin/rails db:create db:migrate --trace

    - run:
        name: Run javascript tests
        command: yarn run jest

    - run:
        name: compile test assets
        command: bundle exec rake assets:precompile

    - run:
        name: Run ruby tests
        command: bundle exec rake test

    - run:
        name: Run cypress tests
        command: ./run_cypress.sh

    - store_artifacts:
        path: test/cypress/videos

    - store_artifacts:
        path: test/cypress/screenshots

workflows:
  version: 2
  build_and_next:
    jobs:
    - build
    - next
